/*
 * @see https://github.com/JetBrains/Grammar-Kit
 */
{
  parserClass="me.alanfoster.intellij.blueprint.language.InjectionParser"
  stubParserClass="me.alanfoster.intellij.camel.simple.language.parser.GeneratedParserUtilBase"

  implements="me.alanfoster.intellij.blueprint.language.psi.InjectionElement"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Injection"
  psiImplClassSuffix="Impl"
  psiPackage="me.alanfoster.intellij.blueprint.language.psi"
  psiImplPackage="me.alanfoster.intellij.blueprint.language.impl"

  psiImplUtilClass="me.alanfoster.intellij.blueprint.language.psi.InjectionPsiImplUtil"

  elementTypeHolderClass="me.alanfoster.intellij.blueprint.language.InjectionTypes"
  elementTypeClass="me.alanfoster.intellij.blueprint.language.psi.InjectionElementType"
  tokenTypeClass="me.alanfoster.intellij.blueprint.language.psi.InjectionTokenType"
}

// ${foo.bar.baz}

injectionLanguage ::= item_

private item_ ::= (TEXT | propertyDefinition | CRLF)

propertyDefinition ::= FUNCTION_START PROPERTY_NAME FUNCTION_END {methods = [getName getNameIdentifier setName]}